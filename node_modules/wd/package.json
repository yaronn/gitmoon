{
  "name": "wd",
  "description": "WebDriver/Selenium 2 node.js client",
  "tags": [
    "web",
    "automation",
    "browser",
    "javascript"
  ],
  "version": "0.0.21",
  "author": {
    "name": "Adam Christian",
    "email": "adam.christian@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/admc/wd.git"
  },
  "bugs": {
    "url": "https://github.com/admc/wd/issues"
  },
  "engines": [
    "node"
  ],
  "main": "./lib/main",
  "bin": {
    "wd": "./lib/bin.js"
  },
  "directories": {
    "lib": "./lib"
  },
  "dependencies": {
    "async": "0.1.22"
  },
  "devDependencies": {
    "nodeunit": "latest",
    "should": "latest",
    "coffee-script": "latest",
    "express": "latest",
    "gleak": "latest"
  },
  "scripts": {
    "test": "make test_saucelabs"
  },
  "readme": "# WD.js -- A light weight WebDriver/Se2 client for node.js\n\n[![Build Status](https://secure.travis-ci.org/admc/wd.png?branch=master)](http://travis-ci.org/admc/wd)\n\n## Update node to latest\n\nhttp://nodejs.org/#download\n\n## Install\n\n<pre>\nnpm install wd\n</pre>\n\n## Authors\n\n  - Adam Christian ([admc](http://github.com/admc))\n  - Ruben Daniels ([javruben](https://github.com/javruben))\n  - Peter Braden ([peterbraden](https://github.com/peterbraden))\n  - Seb Vincent ([sebv](https://github.com/sebv))\n  - Peter 'Pita' Martischka ([pita](https://github.com/Pita))\n  - Jonathan Lipps ([jlipps](https://github.com/jlipps))\n  - Phil Sarin ([pdsarin](https://github.com/pdsarin))\n  - Mathieu Sabourin ([OniOni](https://github.com/OniOni))\n  \n## License\n\n  * License - Apache 2: http://www.apache.org/licenses/LICENSE-2.0\n\n## Usage\n\n<pre>\n): wd shell\n> x = wd.remote() or wd.remote(\"ondemand.saucelabs.com\", 80, \"username\", \"apikey\")\n\n> x.init() or x.init({desired capabilities ovveride})\n> x.get(\"http://www.url.com\")\n> x.eval(\"window.location.href\", function(e, o) { console.log(o) })\n> x.quit()\n</pre>\n\n\n## Writing a test!\n\n<pre>\nvar webdriver = require('wd')\n  , assert = require('assert');\n\nvar browser = webdriver.remote();\n\nbrowser.on('status', function(info){\n  console.log('\\x1b[36m%s\\x1b[0m', info);\n});\nbrowser.on('command', function(meth, path){\n  console.log(' > \\x1b[33m%s\\x1b[0m: %s', meth, path);\n});\n\ndesired = {\n  browserName:'chrome'\n  , tags: [\"examples\"]\n  , name: \"This is an example test\"\n}\n\nbrowser.init(desired, function() {\n  browser.get(\"http://saucelabs.com/test/guinea-pig\", function() {\n    browser.title(function(err, title) {\n      assert.ok(~title.indexOf('I am a page title - Sauce Labs'), 'Wrong title!');\n      browser.elementById('submit', function(err, el) {\n        browser.clickElement(el, function() {\n          browser.eval(\"window.location.href\", function(err, title) {\n            assert.ok(~title.indexOf('#'), 'Wrong title!');\n            browser.quit()\n          })\n        })\n      })\n    })\n  })\n})\n</pre>\n\n## Supported Methods\n\n<table class=\"wikitable\">\n  <tbody>\n    <tr>\n      <td width=\"50%\" style=\"border: 1px solid #ccc; padding: 5px;\">\n        <strong>JsonWireProtocol</strong>\n      </td>\n      <td width=\"50%\" style=\"border: 1px solid #ccc; padding: 5px;\">\n        <strong>wd</strong>\n      </td>\n    </tr>\n    <tr>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        GET&nbsp;<a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#GET_/status\">/status</a><br>\n        Query the server's current status.\n      </td>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        status(cb) -> cb(err, status)\n      </td>\n    </tr>\n    <tr>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        POST&nbsp;<a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session\">/session</a><br>\n        Create a new session.\n      </td>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        init(desired, cb) -> cb(err, sessionID)\n      </td>\n    </tr>\n    <tr>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        GET&nbsp;<a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#GET_/sessions\">/sessions</a><br>\n        Returns a list of the currently active sessions.\n      </td>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        <ul>\n          <li>all sessions: sessions(cb) -> cb(err, sessions)</li>\n          <li>\n            current session: <br>\n            altSessionCapabilities(cb) -> cb(err, capabilities)\n          </li>\n        </ul>\n      </td>      \n    </tr>    \n    <tr>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        GET&nbsp;<a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#GET_/session/:sessionId\">/session/:sessionId</a><br>\n        Retrieve the capabilities of the specified session.\n      </td>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        sessionCapabilities(cb) -> cb(err, capabilities)\n      </td>      \n    </tr>\n    <tr>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        DELETE&nbsp;<a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#DELETE_/session/:sessionId\">/session/:sessionId</a><br>\n        Delete the session.\n      </td>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        quit(cb) -> cb(err)\n      </td>      \n    </tr>\n    <tr>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        POST&nbsp;<a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/timeouts\">/session/:sessionId/timeouts</a><br>\n        Configure the amount of time that a particular type of operation can execute for before they are aborted and a |Timeout| error is returned to the client.\n      </td>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        <ul>\n          <li>\n            configurable type: NA (but setImplicitWaitTimeout and \n            setAsyncScriptTimeout do the same)\n          </li>\n          <li>\n              page load timeout: <br>\n              setPageLoadTimeout(ms, cb) -> cb(err)\n          </li>\n        </ul>         \n      </td>      \n    </tr>\n    <tr>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        POST&nbsp;<a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/timeouts/async_script\">/session/:sessionId/timeouts/async_script</a><br>\n        Set the amount of time, in milliseconds, that asynchronous scripts executed by <tt>/session/:sessionId/execute_async</tt> are permitted to run before they are aborted and a |Timeout| error is returned to the client.\n      </td>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        setAsyncScriptTimeout(ms, cb) -> cb(err)\n      </td>      \n    </tr>\n    <tr>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        POST&nbsp;<a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/timeouts/implicit_wait\">/session/:sessionId/timeouts/implicit_wait</a><br>\n        Set the amount of time the driver should wait when searching for elements.\n      </td>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        setImplicitWaitTimeout(ms, cb) -> cb(err)\n      </td>      \n    </tr>\n    <tr>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        GET&nbsp;<a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#GET_/session/:sessionId/url\">/session/:sessionId/url</a><br>\n        Retrieve the URL of the current page.\n      </td>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        url(cb) -> cb(err, url)\n      </td>      \n    </tr>\n    <tr>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        POST&nbsp;<a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/url\">/session/:sessionId/url</a><br>\n        Navigate to a new URL.\n      </td>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        get(url,cb) -> cb(err)\n      </td>      \n    </tr>\n    <tr>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        POST&nbsp;<a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/forward\">/session/:sessionId/forward</a><br>\n        Navigate forwards in the browser history, if possible.\n      </td>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        forward(cb) -> cb(err)\n      </td>      \n    </tr>\n    <tr>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        POST&nbsp;<a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/back\">/session/:sessionId/back</a><br>\n        Navigate backwards in the browser history, if possible.\n      </td>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        back(cb) -> cb(err)\n      </td>      \n    </tr>    \n    <tr>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        POST&nbsp;<a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/refresh\">/session/:sessionId/refresh</a><br>\n        Refresh the current page.\n      </td>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        refresh(cb) -> cb(err)\n      </td>      \n    </tr>\n    <tr>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        POST&nbsp;<a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/execute\">/session/:sessionId/execute</a><br>\n        Inject a snippet of JavaScript into the page for execution in the context of the currently selected frame.\n      </td>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        <ul>\n          <li>\n            execute script: <br>\n            execute(code, args, cb) -> cb(err, value returned)\n            <ul>\n              <li>args is an optional Array</li>\n            </ul>\n          </li>\n          <li>\n            execute script using eval(code): <br>\n            safeExecute(code, args, cb) -> cb(err, value returned)\n            <ul>\n              <li>args is an optional Array</li>\n            </ul>\n          </li>\n          <li>\n            evaluate expression (using execute): <br>\n            eval(code, cb) -> cb(err, value)\n          </li>\n          <li>\n            evaluate expression (using safeExecute): <br>\n            safeEval(code, cb) -> cb(err, value)\n          </li>\n        </ul>\n      </td>      \n    </tr>\n    <tr>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        POST&nbsp;<a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/execute_async\">/session/:sessionId/execute_async</a><br>\n        Inject a snippet of JavaScript into the page for execution in the context of the currently selected frame.\n      </td>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        <ul>\n          <li>\n            execute async script: <br>\n            executeAsync(code, args, cb) -> cb(err, value returned)\n            <ul>\n              <li>args is an optional Array</li>\n            </ul>\n          </li>\n          <li>\n            execute async script using eval(code): <br>\n            safeExecuteAsync(code, args, cb) -> cb(err, value returned)\n            <ul>\n              <li>args is an optional Array</li>\n            </ul>\n          </li>\n        </ul>   \n      </td>      \n    </tr>\n    <tr>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        DELETE&nbsp;<a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#DELETE_/session/:sessionId/window\">/session/:sessionId/window</a><br>\n        Close the current window.\n      </td>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        close(cb) -> cb(err)\n      </td>      \n    </tr>\n    <tr>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        GET&nbsp;<a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#GET_/session/:sessionId/cookie\">/session/:sessionId/cookie</a><br>\n        Retrieve all cookies visible to the current page.\n      </td>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        allCookies() -> cb(err, cookies)\n      </td>      \n    </tr>\n    <tr>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        POST&nbsp;<a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/cookie\">/session/:sessionId/cookie</a><br>\n        Set a cookie.\n      </td>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        setCookie(cookie, cb) -> cb(err)\n      </td>      \n    </tr>\n    <tr>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        DELETE&nbsp;<a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#DELETE_/session/:sessionId/cookie\">/session/:sessionId/cookie</a><br>\n        Delete all cookies visible to the current page.\n      </td>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        deleteAllCookies(cb) -> cb(err)\n      </td>      \n    </tr>\n    <tr>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        DELETE&nbsp;<a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#DELETE_/session/:sessionId/cookie/:name\">/session/:sessionId/cookie/:name</a><br>\n        Delete the cookie with the given name.\n      </td>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        deleteCookie(name, cb) -> cb(err)\n      </td>      \n    </tr>\n    <tr>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        GET&nbsp;<a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#GET_/session/:sessionId/title\">/session/:sessionId/title</a><br>\n        Get the current page title.\n      </td>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        title(cb) -> cb(err, title)\n      </td>      \n    </tr>\n    <tr>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        POST&nbsp;<a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/element\">/session/:sessionId/element</a><br>\n        Search for an element on the page, starting from the document root.\n      </td>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        <ul>\n          <li>\n            element(using, value, cb) -> cb(err, element) <br>\n          </li>\n          <li>\n            element<i>suffix</i>(value, cb) -> cb(err, element) <br> \n              <i>suffix:  \n              ByClassName, ByCssSelector, ById,  \n              ByName, ByLinkText, ByPartialLinkText, \n              ByTagName, ByXPath, ByCss</i>\n          </li>\n          <li>\n            see also hasElement, hasElement<i>suffix</i>, elementOrNull, element<i>suffix</i>OrNull, \n            elementIfExists, element<i>suffix</i>IfExists, in the elements section.\n          </li>\n        <ul>\n      </td>      \n    </tr>\n    <tr>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        POST&nbsp;<a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/elements\">/session/:sessionId/elements</a><br>\n        Search for multiple elements on the page, starting from the document root.\n      </td>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        <ul>\n          <li>\n            elements(using, value, cb) -> cb(err, elements) <br>\n          </li>\n          <li>\n            elements<i>suffix</i>(value, cb) -> cb(err, elements) <br> \n              <i>suffix:  \n              ByClassName, ByCssSelector, ById,  \n              ByName, ByLinkText, ByPartialLinkText, \n              ByTagName, ByXPath, ByCss</i>\n          </li>\n          <li>\n            hasElement(using, value, cb) -> cb(err, boolean) <br>\n          </li>\n          <li>\n            hasElement<i>suffix</i>(value, cb) -> cb(err, boolean) <br> \n              <i>suffix:  \n              ByClassName, ByCssSelector, ById,  \n              ByName, ByLinkText, ByPartialLinkText, \n              ByTagName, ByXPath, ByCss</i>\n          </li>                    \n          <li>\n            elementOrNull(using, value, cb) -> cb(err, element) <br>\n            (avoids not found error throw and returns null instead)   \n          </li>\n          <li>\n            element<i>suffix</i>OrNull(value, cb) -> cb(err, element) <br> \n            (avoids not found error throw and returns null instead) <br>\n              <i>suffix:  \n              ByClassName, ByCssSelector, ById,  \n              ByName, ByLinkText, ByPartialLinkText, \n              ByTagName, ByXPath, ByCss</i>\n          </li>\n          <li>\n            elementIfExists(using, value, cb) -> cb(err, element) <br>\n            (avoids not found error throw and returns undefined instead)   \n          </li>\n          <li>\n            element<i>suffix</i>IfExists(value, cb) -> cb(err, element) <br> \n            (avoids not found error throw and returns undefined instead) <br>\n              <i>suffix:  \n              ByClassName, ByCssSelector, ById,  \n              ByName, ByLinkText, ByPartialLinkText, \n              ByTagName, ByXPath, ByCss</i>\n          </li>\n        <ul>\n      </td>      \n    </tr>    \n    <tr>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        POST&nbsp;<a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/element/active\">/session/:sessionId/element/active</a><br>\n        Get the element on the page that currently has focus.\n      </td>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        active(cb) -> cb(err, element)\n      </td>      \n    </tr>\n    <tr>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        POST&nbsp;<a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/element/:id/click\">/session/:sessionId/element/:id/click</a><br>\n        Click on an element.\n      </td>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        clickElement(element, cb) -> cb(err)\n      </td>      \n    </tr>\n    <tr>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        GET&nbsp;<a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#GET_/session/:sessionId/element/:id/text\">/session/:sessionId/element/:id/text</a><br>\n        Returns the visible text for the element.\n      </td>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        <ul>\n          <li>\n            text(element, cb) -> (err, text)\n          </li>\n          <li>\n            textPresent(searchText, element, cb) -> (err, boolean)\n          </li>  \n        </ul>\n      </td>      \n    </tr>\n    <tr>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        POST&nbsp;<a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/element/:id/value\">/session/:sessionId/element/:id/value</a><br>\n        Send a sequence of key strokes to an element.\n      </td>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        <ul>\n          <li>\n            type(element, keys, cb) -> cb(err)\n          </li>\n          <li>\n            special key map: wd.SPECIAL_KEYS (see lib/special-keys.js)\n          </li>\n        </ul>\n      </td>      \n    </tr>\n    <tr>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        POST&nbsp;<a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/keys\">/session/:sessionId/keys</a><br>\n        Send a sequence of key strokes to the active element.\n      </td>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        <ul>\n          <li>\n            keys(keys, cb) -> cb(err)\n          </li>\n          <li>\n            special key map: wd.SPECIAL_KEYS (see lib/special-keys.js)\n          </li>\n        </ul>\n      </td>      \n    </tr>\n    <tr>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        POST&nbsp;<a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/element/:id/clear\">/session/:sessionId/element/:id/clear</a><br>\n        Clear a <tt>TEXTAREA</tt> or <tt>text INPUT</tt> element's value.\n      </td>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        clear(element, cb) -> cb(err)\n      </td>      \n    </tr>\n    <tr>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        GET&nbsp;<a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#GET_/session/:sessionId/element/:id/attribute/:name\">/session/:sessionId/element/:id/attribute/:name</a><br>\n        Get the value of an element's attribute.\n      </td>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        <ul>\n          <li>\n            getAttribute(element, attrName, cb) -> cb(err, value)\n          </li>\n          <li>\n            getValue(element, cb) -> cb(err, value)\n          </li>\n        </ul>\n      </td>      \n    </tr>\n    <tr>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        POST&nbsp;<a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/accept_alert\">/session/:sessionId/accept_alert</a><br>\n        Accepts the currently displayed alert dialog.\n      </td>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        acceptAlert(cb) -> cb(err)\n      </td>      \n    </tr>\n    <tr>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        POST&nbsp;<a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/dismiss_alert\">/session/:sessionId/dismiss_alert</a><br>\n        Dismisses the currently displayed alert dialog.\n      </td>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        dismissAlert(cb) -> cb(err)\n      </td>      \n    </tr>\n    <tr>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        POST&nbsp;<a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/moveto\">/session/:sessionId/moveto</a><br>\n        Move the mouse by an offset of the specificed element.\n      </td>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        moveTo(element, xoffset, yoffset, cb) -> cb(err)\n      </td>      \n    </tr>\n    <tr>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        POST&nbsp;<a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/click\">/session/:sessionId/click</a><br>\n        Click any mouse button (at the coordinates set by the last moveto command).\n      </td>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        click(button, cb) -> cb(err)  <br>\n        buttons: {left: 0, middle: 1 , right: 2}\n      </td>      \n    </tr>\n    <tr>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        POST&nbsp;<a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/buttondown\">/session/:sessionId/buttondown</a><br>\n        Click and hold the left mouse button (at the coordinates set by the last moveto command).\n      </td>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        buttonDown(cb) -> cb(err)\n      </td>      \n    </tr>\n    <tr>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        POST&nbsp;<a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/buttonup\">/session/:sessionId/buttonup</a><br>\n        Releases the mouse button previously held (where the mouse is currently at).\n      </td>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        buttonUp(cb) -> cb(err)\n      </td>      \n    </tr>\n    <tr>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        POST&nbsp;<a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/doubleclick\">/session/:sessionId/doubleclick</a><br>\n        Double-clicks at the current mouse coordinates (set by moveto).\n      </td>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        doubleclick(cb) -> cb(err) <br>\n      </td>      \n    </tr>    \n    <tr>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        EXTRA: waitForCondition<br>\n        Waits for JavaScript condition to be true (polling within wd client).\n      </td>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        waitForCondition(conditionExpr, timeout, pollFreq, cb) -> cb(err, boolean)\n        <ul>\n        <li>conditionExpr should return a boolean</li>\n        <li>timeout and pollFreq are optional (default: 1000, 100).</li>\n        <li>return true if condition satisfied, error otherwise.</li>\n        </ul>\n      </td>      \n    </tr>\n    <tr>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        EXTRA: waitForConditionInBrowser<br>\n        Waits for JavaScript condition to be true. (async script polling within browser)\n      </td>\n      <td style=\"border: 1px solid #ccc; padding: 5px;\">\n        waitForConditionInBrowser(conditionExpr, timeout, pollFreq, cb) -> cb(err, boolean)\n        <ul>\n        <li>setAsyncScriptTimeout must be set to value higher than timeout</li>\n        <li>conditionExpr should return a boolean</li>\n        <li>timeout and pollFreq are optional (default: 1000, 100).</li>\n        <li>return true if condition satisfied, error otherwise.</li>\n        </ul>\n      </td>      \n    </tr>    \n  </tbody>\n</table>\n\n### Full JsonWireProtocol mapping:\n\n[full mapping](https://github.com/sebv/wd/blob/master/doc/jsonwiremap-all.md)\n\n## More docs!\n<pre>\nWD is simply implementing the Selenium JsonWireProtocol, for more details see the official docs:\n - <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol\">http://code.google.com/p/selenium/wiki/JsonWireProtocol</a>\n</pre>\n\n## Run the tests!\n<pre>\n  - Run the selenium server with chromedriver: \n      java -jar selenium-server-standalone-2.21.0.jar -Dwebdriver.chrome.driver=&lt;PATH&gt;/chromedriver\n  - cd wd\n  - npm install .\n  - make test\n  - look at the results!\n</pre>\n",
  "_id": "wd@0.0.21",
  "dist": {
    "shasum": "7d7f10ce3dbc6b750b4590324e64c064946b9912"
  },
  "_from": "wd@~0.0.20"
}
