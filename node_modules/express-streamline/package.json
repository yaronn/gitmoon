{
  "name": "express-streamline",
  "description": "Express monkey-patch to support Streamline syntax.",
  "version": "0.1.3",
  "author": {
    "name": "Aseem Kishore",
    "email": "aseem.kishore@gmail.com"
  },
  "dependencies": {},
  "devDependencies": {},
  "engines": {
    "node": "*"
  },
  "scripts": {},
  "homepage": "https://github.com/aseemk/express-streamline",
  "repository": {
    "type": "git",
    "url": "git://github.com/aseemk/express-streamline.git"
  },
  "readme": "# Express-Streamline\n\nMonkey-patches [Express](http://expressjs.com/) to add support for\n[Streamline](https://github.com/Sage/streamlinejs) syntax in routes.\n\nSee the example and details below.\n\n## Installation\n\n```\nnpm install express-streamline\n```\n\n## Usage\n\nYou can either `require()` Express normally and then monkey-patch it:\n\n```js\nvar express = require('express');\nrequire('express-streamline');\n```\n\nOr just `require()` this module, which returns the monkey-patched Express for\nconvenience:\n\n```js\nvar express = require('express-streamline');\n```\n\n## Example\n\n```js\nvar express = require('express-streamline');\nvar app = express.createServer();\n\n// ...\n\napp.get('/user/:id', function (req, res, _) {\n    var user = User.getByUsername(req.params.id, _);\n    var favs = user.getFavorites(_);\n    \n    res.render('user', {\n        user: user,\n        favs: favs,\n    });\n});\n```\n\n## Details\n\nExpress routes can be asynchronous, and so they take a `next()` callback. But\nthis `next()` callback isn't quite like typical Node async callbacks â€” it\ncan't be called to signal successful completion *without triggering the next\nmatching route or middleware*.\n\nThis doesn't work well with tools like Streamline, which are built for typical\nNode async callbacks. So this plugin simply monkey-patches Express to support\ncalling the `next()` callback without error *without triggering the next\nmatching route or middleware*.\n\n**Note that this means multiple routes can no longer handle a single URL.**\nIn other words, route handlers become the final handlers for any given URL.\nBut that's the typical style of writing MVC apps anyway, so this trade-off\nmight not be a trade-off to you at all (it isn't in any app I've written).\n\nIf you have any questions or comments, don't hesitate to reach out. =)\n\n## TODO\n\nThis only patches HTTP servers; patch HTTPS ones too. Is there a way to do\nthat in a generic way?\n\nInvestigate support for Express 3 / Connect 2.\n\n## License\n\nMIT. &copy; 2012 Aseem Kishore.\n\n## Credits\n\n[TJ Holowaychuk](https://github.com/visionmedia) for the awesome Express, and\n[Bruno Jouhier](https://github.com/bjouhier) for the awesome Streamline.\n",
  "_id": "express-streamline@0.1.3",
  "dist": {
    "shasum": "16015e883df59ee68eb1b181162c21a6e18dcd74"
  },
  "_from": "express-streamline@~0.1.3"
}
