/*** Generated by streamline 0.4.5 (callbacks) - DO NOT EDIT ***/ var __rt=require('streamline/lib/callbacks/runtime').runtime(__filename),__func=__rt.__func,__cb=__rt.__cb,__tryCatch=__rt.__tryCatch,__apply=__rt.__apply; (function() {
  var Node, Path, PropertyContainer, Relationship, adjustError, flows, status, util, __hasProp = {
  }.hasOwnProperty, __extends = function(child, parent) {
    for (var key in parent) { if (__hasProp.call(parent, key)) { child[key] = parent[key]; }; }; function ctor() { this.constructor = child; }; ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  flows = require("streamline/lib/util/flows");

  status = require("http-status");

  util = require("./util");

  adjustError = util.adjustError;

  PropertyContainer = require("./PropertyContainer");

  Relationship = require("./Relationship");

  Path = require("./Path");

  module.exports = Node = (function(_super) {

    __extends(Node, _super);

    function Node(db, data) {
      Node.__super__.constructor.call(this, db, data); };


    Node.prototype.toString = function() {
      if (this.exists) {
        return ("node @" + this.id); }
       else {
        return (("unsaved node (" + (JSON.stringify(this.data, null, 4))) + ")"); } ; };



    Node.prototype.save = function Node_prototype_save__1(_) { var message, response, services, _ref, _ref1, __this = this; var __frame = { name: "Node_prototype_save__1", line: 36 }; return __func(_, this, arguments, Node_prototype_save__1, 0, __frame, function __$Node_prototype_save__1() { return (function ___(__then) { (function ___(_) { __tryCatch(_, function __$Node_prototype_save__1() { return (function __$Node_prototype_save__1(__then) {


                if (__this.exists) {
                  return __this._request.put({
                    uri: (("" + __this.self) + "/properties"),
                    json: __this.data }, __cb(_, __frame, 4, 21, function ___(__0, __1) { response = __1;

                    if ((response.statusCode !== status.NO_CONTENT)) {
                      message = (((_ref = response.body) != null) ? _ref.message : void 0);
                      switch (response.statusCode) {
                      case status.BAD_REQUEST: (message || (message = "Invalid data sent"));
                        break;
                      case status.NOT_FOUND:
                        (message || (message = "Node not found"));
                      };

                      return _(new Error(message)); } ; __then(); }, true)); } else {


                  return __this.db.getServices(__cb(_, __frame, 20, 21, function ___(__0, __2) { services = __2;
                    return __this._request.post({
                      uri: services.node,
                      json: __this.data }, __cb(_, __frame, 21, 21, function ___(__0, __3) { response = __3;

                      if ((response.statusCode !== status.CREATED)) {
                        message = (((((_ref1 = response.body) != null) ? _ref1.message : void 0)) || "Invalid data sent");
                        return _(new Error(message)); } ;

                      __this._data = response.body; __then(); }, true)); }, true)); } ; })(function __$Node_prototype_save__1() { return _(null, __this); }); }); })(function ___(error, __result) { __tryCatch(_, function __$Node_prototype_save__1() { if (error) {



                return _(adjustError(error)); } else { _(null, __result); } ; }); }); })(function ___() { __tryCatch(_, _); }); }); };



    Node.prototype["delete"] = function Node_prototype_delete__2(_, force) { var relationship, relationships, __this = this, __arguments = arguments; var __frame = { name: "Node_prototype_delete__2", line: 73 }; return __func(_, this, arguments, Node_prototype_delete__2, 0, __frame, function __$Node_prototype_delete__2() {

        if ((force == null)) {
          force = false; } ;

        if (!__this.exists) { return _(null); } ; return (function ___(__then) { (function ___(_) { __tryCatch(_, function __$Node_prototype_delete__2() { return (function __$Node_prototype_delete__2(__then) {



                if (force) {
                  return __this.all(null, __cb(_, __frame, 10, 26, function ___(__0, __2) { relationships = __2;








                    return (function __1(_) { var _i, _len, _results; _results = []; for (_i = 0, _len = relationships.length; (_i < _len); _i++) { relationship = relationships[_i]; _results.push(relationship["delete"]()); }; return _(null, _results); })(__cb(_, __frame, 19, 27, function ___(__0, __3) { return flows.collect(__cb(_, __frame, 11, 10, __then, true), __3); }, true)); }, true)); } else { __then(); } ; })(__then); }); })(function ___(error, __result) { __tryCatch(_, function __$Node_prototype_delete__2() { if (error) {


                return _(adjustError(error)); } else { _(null, __result); } ; }); }); })(function ___() { __tryCatch(_, function __$Node_prototype_delete__2() {

            return __apply(__cb(_, __frame, 24, 13, _, true), Node.__super__["delete"], __this, __arguments, 0); }); }); }); };


    Node.prototype.del = Node.prototype["delete"];

    Node.prototype.createRelationshipTo = function Node_prototype_createRelationshipTo__3(otherNode, type, data, _) { var __this = this; var __frame = { name: "Node_prototype_createRelationshipTo__3", line: 102 }; return __func(_, this, arguments, Node_prototype_createRelationshipTo__3, 3, __frame, function __$Node_prototype_createRelationshipTo__3() {
        return __this._createRelationship(__this, otherNode, type, data, __cb(_, __frame, 1, 13, _, true)); }); };


    Node.prototype.createRelationshipFrom = function Node_prototype_createRelationshipFrom__4(otherNode, type, data, _) { var __this = this; var __frame = { name: "Node_prototype_createRelationshipFrom__4", line: 106 }; return __func(_, this, arguments, Node_prototype_createRelationshipFrom__4, 3, __frame, function __$Node_prototype_createRelationshipFrom__4() {
        return __this._createRelationship(otherNode, __this, type, data, __cb(_, __frame, 1, 13, _, true)); }); };


    Node.prototype._createRelationship = function Node_prototype__createRelationship__5(from, to, type, data, _) { var createRelationshipURL, message, otherNodeURL, response, _ref, _ref1, __this = this; var __frame = { name: "Node_prototype__createRelationship__5", line: 110 }; return __func(_, this, arguments, Node_prototype__createRelationship__5, 4, __frame, function __$Node_prototype__createRelationship__5() { return (function ___(__then) { (function ___(_) { __tryCatch(_, function __$Node_prototype__createRelationship__5() {


              createRelationshipURL = from._data["create_relationship"];
              otherNodeURL = to.self; return (function __$Node_prototype__createRelationship__5(__then) {
                if ((((createRelationshipURL != null)) && otherNodeURL)) {
                  return __this._request.post({
                    url: createRelationshipURL,
                    json: {
                      to: otherNodeURL,
                      data: data,
                      type: type } }, __cb(_, __frame, 6, 21, function ___(__0, __1) { response = __1;


                    if ((response.statusCode !== status.CREATED)) {
                      message = "";
                      switch (response.statusCode) {
                      case status.BAD_REQUEST: message = ((((((_ref = response.body) != null) ? _ref.message : void 0)) || ((((_ref1 = response.body) != null) ? _ref1.exception : void 0))) || (((((((("Invalid createRelationship: " + from.id) + " ") + type) + " ") + to.id) + " w/ data: ") + (JSON.stringify(data)))));
                        break;
                      case status.CONFLICT:
                        message = "\"to\" node, or the node specified by the URI not found";
                      };

                      return _(new Error(message)); } ;

                    return _(null, new Relationship(__this.db, response.body, from, to)); }, true)); } else {

                  return _(new Error("Failed to create relationship")); } ; })(__then); }); })(function ___(error, __result) { __tryCatch(_, function __$Node_prototype__createRelationship__5() { if (error) {


                return _(adjustError(error)); } else { _(null, __result); } ; }); }); })(function ___() { __tryCatch(_, _); }); }); };



    Node.prototype._getRelationships = function Node_prototype__getRelationships__6(direction, type, _) { var prefix, relationshipsURL, resp, types, _this, __this = this; var __frame = { name: "Node_prototype__getRelationships__6", line: 144 }; return __func(_, this, arguments, Node_prototype__getRelationships__6, 2, __frame, function __$Node_prototype__getRelationships__6() { _this = __this;


        types = null;
        if ((type != null)) {
          types = ((type instanceof Array) ? type : [type,]); } ; return (function ___(__then) { (function ___(_) { __tryCatch(_, function __$Node_prototype__getRelationships__6() {


              if ((types != null)) {
                prefix = __this._data[(("" + direction) + "_typed_relationships")];
                relationshipsURL = ((prefix != null) ? prefix.replace("{-list|&|types}", types.join("&")) : void 0); }
               else {
                relationshipsURL = __this._data[(("" + direction) + "_relationships")]; } ;

              if (!relationshipsURL) {
                return _(new Error("Couldn't find URL of relationships endpoint.")); } ;

              return __this._request.get(relationshipsURL, __cb(_, __frame, 17, 15, function ___(__0, __1) { resp = __1;
                if ((resp.statusCode === status.NOT_FOUND)) {
                  return _(new Error("Node not found.")); } ;

                if ((resp.statusCode !== status.OK)) {
                  return _(new Error(("Unrecognized response code: " + resp.statusCode))); } ;

                return _(null, resp.body.map(function(data) {
                  if ((_this.self === data.start)) {
                    return new Relationship(_this.db, data, _this, null); }
                   else {
                    return new Relationship(_this.db, data, null, _this); } ; })); }, true)); }); })(function ___(error, __result) { __tryCatch(_, function __$Node_prototype__getRelationships__6() { if (error) {



                return _(adjustError(error)); } else { _(null, __result); } ; }); }); })(function ___() { __tryCatch(_, _); }); }); };



    Node.prototype.getRelationships = function Node_prototype_getRelationships__7(type, _) { var __this = this; var __frame = { name: "Node_prototype_getRelationships__7", line: 180 }; return __func(_, this, arguments, Node_prototype_getRelationships__7, 1, __frame, function __$Node_prototype_getRelationships__7() {
        return __this.all(type, __cb(_, __frame, 1, 13, _, true)); }); };


    Node.prototype.outgoing = function Node_prototype_outgoing__8(type, _) { var __this = this; var __frame = { name: "Node_prototype_outgoing__8", line: 184 }; return __func(_, this, arguments, Node_prototype_outgoing__8, 1, __frame, function __$Node_prototype_outgoing__8() {
        return __this._getRelationships("outgoing", type, __cb(_, __frame, 1, 13, _, true)); }); };


    Node.prototype.incoming = function Node_prototype_incoming__9(type, _) { var __this = this; var __frame = { name: "Node_prototype_incoming__9", line: 188 }; return __func(_, this, arguments, Node_prototype_incoming__9, 1, __frame, function __$Node_prototype_incoming__9() {
        return __this._getRelationships("incoming", type, __cb(_, __frame, 1, 13, _, true)); }); };


    Node.prototype.all = function Node_prototype_all__10(type, _) { var __this = this; var __frame = { name: "Node_prototype_all__10", line: 192 }; return __func(_, this, arguments, Node_prototype_all__10, 1, __frame, function __$Node_prototype_all__10() {
        return __this._getRelationships("all", type, __cb(_, __frame, 1, 13, _, true)); }); };


    Node.prototype.path = function Node_prototype_path__11(to, type, direction, maxDepth, algorithm, _) { var data, end, length, nodes, pathURL, relationships, res, start, _this, __this = this; var __frame = { name: "Node_prototype_path__11", line: 196 }; return __func(_, this, arguments, Node_prototype_path__11, 5, __frame, function __$Node_prototype_path__11() { _this = __this;


        if ((maxDepth == null)) {
          maxDepth = 1; } ;

        if ((algorithm == null)) {
          algorithm = "shortestPath"; } ; return (function ___(__then) { (function ___(_) { __tryCatch(_, function __$Node_prototype_path__11() {


              pathURL = (("" + __this.self) + "/path");
              data = {
                to: to.self,
                relationships: {
                  type: type,
                  direction: direction },

                max_depth: maxDepth,
                algorithm: algorithm };

              return __this._request.post({
                url: pathURL,
                json: data }, __cb(_, __frame, 20, 14, function ___(__0, __1) { res = __1;

                if ((res.statusCode === status.NOT_FOUND)) {
                  return _(null, null); } ;

                if ((res.statusCode !== status.OK)) {
                  return _(new Error(("Unrecognized response code: " + res.statusCode))); } ;

                data = res.body;
                start = new Node(__this, {
                  self: data.start });

                end = new Node(__this, {
                  self: data.end });

                length = data.length;
                nodes = data.nodes.map(function(url) {
                  return new Node(_this, {
                    self: url }); });


                relationships = data.relationships.map(function(url) {
                  return new Relationship(_this, {
                    self: url,
                    type: type }); });


                return _(null, new Path(start, end, length, nodes, relationships)); }, true)); }); })(function ___(error, __result) { __tryCatch(_, function __$Node_prototype_path__11() { if (error) {

                return _(adjustError(error)); } else { _(null, __result); } ; }); }); })(function ___() { __tryCatch(_, _); }); }); };



    Node.prototype.getRelationshipNodes = function Node_prototype_getRelationshipNodes__12(rels, _) { var resp, traverseURL, _ref, _ref1, _ref2, _this, __this = this; var __frame = { name: "Node_prototype_getRelationshipNodes__12", line: 251 }; return __func(_, this, arguments, Node_prototype_getRelationshipNodes__12, 1, __frame, function __$Node_prototype_getRelationshipNodes__12() { _this = __this;


        rels = ((rels instanceof Array) ? rels : [rels,]); return (function ___(__then) { (function ___(_) { __tryCatch(_, function __$Node_prototype_getRelationshipNodes__12() {

              traverseURL = (((_ref = __this._data["traverse"]) != null) ? _ref.replace("{returnType}", "node") : void 0);
              if (!traverseURL) {
                return _(new Error("Traverse not available.")); } ;

              return __this._request.post({
                url: traverseURL,
                json: {
                  max_depth: 1,
                  relationships: rels.map(function(rel) {
                    if ((typeof rel === "string")) {
                      return {
                        type: rel }; }

                     else {
                      return rel; } ; }) } }, __cb(_, __frame, 9, 15, function ___(__0, __1) { resp = __1;




                if ((resp.statusCode === 404)) {
                  return _(new Error((((((_ref1 = resp.body) != null) ? _ref1.message : void 0)) || "Node not found."))); } ;

                if ((resp.statusCode !== 200)) {
                  return _(new Error((((((_ref2 = resp.body) != null) ? _ref2.message : void 0)) || (("Unrecognized response code: " + resp.statusCode))))); } ;

                return _(null, resp.body.map(function(data) {
                  return new Node(_this.db, data); })); }, true)); }); })(function ___(error, __result) { __tryCatch(_, function __$Node_prototype_getRelationshipNodes__12() { if (error) {


                return _(adjustError(error)); } else { _(null, __result); } ; }); }); })(function ___() { __tryCatch(_, _); }); }); };



    Node.prototype.index = function Node_prototype_index__13(index, key, value, _) { var encodedKey, encodedValue, response, services, url, version, __this = this; var __frame = { name: "Node_prototype_index__13", line: 289 }; return __func(_, this, arguments, Node_prototype_index__13, 3, __frame, function __$Node_prototype_index__13() { return (function ___(__then) { (function ___(_) { __tryCatch(_, function __$Node_prototype_index__13() {


              if (!__this.exists) {
                return _(new Error("Node must exists before indexing properties")); } ;

              return __this.db.getServices(__cb(_, __frame, 6, 19, function ___(__0, __1) { services = __1;
                return __this.db.getVersion(__cb(_, __frame, 7, 18, function ___(__0, __2) { version = __2; return (function __$Node_prototype_index__13(__then) {
                    if ((version <= 1.4)) {
                      encodedKey = encodeURIComponent(key);
                      encodedValue = encodeURIComponent(value);
                      url = ((((((("" + services.node_index) + "/") + index) + "/") + encodedKey) + "/") + encodedValue);
                      return __this._request.post({
                        url: url,
                        json: __this.self }, __cb(_, __frame, 12, 21, function ___(__0, __3) { response = __3; __then(); }, true)); } else {


                      return __this._request.post({
                        url: ((("" + services.node_index) + "/") + index),
                        json: {
                          key: key,
                          value: value,
                          uri: __this.self } }, __cb(_, __frame, 17, 21, function ___(__0, __4) { response = __4; __then(); }, true)); } ; })(function __$Node_prototype_index__13() {



                    if ((response.statusCode !== status.CREATED)) {
                      return _(response); } ; __then(); }); }, true)); }, true)); }); })(function ___(error, __result) { __tryCatch(_, function __$Node_prototype_index__13() { if (error) {


                return _(adjustError(error)); } else { _(null, __result); } ; }); }); })(function ___() { __tryCatch(_, _); }); }); };



    return Node;

  })(PropertyContainer);

}).call(this);