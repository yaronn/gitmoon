/*** Generated by streamline 0.4.5 (callbacks) - DO NOT EDIT ***/ var __rt=require('streamline/lib/callbacks/runtime').runtime(__filename),__func=__rt.__func,__cb=__rt.__cb,__tryCatch=__rt.__tryCatch; (function() {
  var PropertyContainer, adjustError, status, util;

  status = require("http-status");

  util = require("./util");

  adjustError = util.adjustError;

  module.exports = PropertyContainer = (function() {
    var get, set, _this = this;


    function PropertyContainer(db, data) {
      this.db = db;
      this._request = db._request;
      this._data = (data || { });
      this._data.self = ((((data != null) ? data.self : void 0)) || null); };


    get = function(props) {
      var getter, name, _results;
      _results = [];
      for (name in props) {
        getter = props[name];
        _results.push(PropertyContainer.prototype.__defineGetter__(name, getter)); };

      return _results; };


    set = function(props) {
      var name, setter, _results;
      _results = [];
      for (name in props) {
        setter = props[name];
        _results.push(PropertyContainer.prototype.__defineSetter__(name, setter)); };

      return _results; };


    get({
      self: function() {
        return (this._data.self || null); } });



    get({
      exists: function() {
        return (this.self != null); } });



    get({
      id: function() {
        var match;
        if (!this.exists) {
          return null; }
         else {
          match = /(?:node|relationship)\/(\d+)$/.exec(this.self);
          return parseInt(match[1]); } ; } });




    get({
      data: function() {
        return (this._data.data || null); } });



    set({
      data: function(value) {
        return this._data.data = value; } });



    PropertyContainer.prototype.equals = function(other) {
      return (this.self === (((other != null) ? other.self : void 0))); };


    PropertyContainer.prototype["delete"] = function PropertyContainer_prototype_delete__1(_) { var message, response, __this = this; var __frame = { name: "PropertyContainer_prototype_delete__1", line: 81 }; return __func(_, this, arguments, PropertyContainer_prototype_delete__1, 0, __frame, function __$PropertyContainer_prototype_delete__1() {

        if (!__this.exists) { return _(null); } ; return (function ___(__then) { (function ___(_) { __tryCatch(_, function __$PropertyContainer_prototype_delete__1() {



              return __this._request.del(__this.self, __cb(_, __frame, 6, 19, function ___(__0, __1) { response = __1;
                if ((response.statusCode !== status.NO_CONTENT)) {
                  message = "";
                  switch (response.statusCode) {
                  case status.NOT_FOUND: message = "PropertyContainer not found";
                    break;
                  case status.CONFLICT:
                    message = "Node could not be deleted (still has relationships?)";
                  };

                  return _(new Error(message)); } ;

                __this._data.self = null; __then(); }, true)); }); })(function ___(error, __result) { __tryCatch(_, function __$PropertyContainer_prototype_delete__1() { if (error) {

                return _(adjustError(error)); } else { _(null, __result); } ; }); }); })(function ___() { __tryCatch(_, _); }); }); };



    PropertyContainer.prototype.del = PropertyContainer.prototype["delete"];

    return PropertyContainer;

  }).call(this);

}).call(this);